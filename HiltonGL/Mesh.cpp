// Author: Charles Hilton
//          charles.hilton@snhu.edu
// Generated by ChatGPT then modified, an OpenAI project. https://chat.openai.com/chat

#include <iostream>
#include <fstream>
#include <vector>
#include <string>

struct Vertex {
  float x, y, z;
};

struct TextureCoordinate {
  float u, v;
};

struct Normal {
  float x, y, z;
};

struct Face {
  int v1, v2, v3;
  int t1, t2, t3;
  int n1, n2, n3;
};

bool parseOBJwithTextureInfo(const char* filePath) {
  std::vector<Vertex> vertices;
  std::vector<TextureCoordinate> textureCoordinates;
  std::vector<Normal> normals;
  std::vector<Face> faces;

  std::ifstream file(filePath);
  std::string line;
  while (std::getline(file, line)) {
    if (line.empty() || line[0] == '#') {   // Skip empty lines or comment lines...
      continue;
    }

    std::stringstream lineStream(line);
    std::string type;
    lineStream >> type;

    if (type == "v") {
      float x, y, z;
      lineStream >> x >> y >> z;
      vertices.push_back({x, y, z});
    } else if (type == "vt") {
      float u, v;
      lineStream >> u >> v;
      textureCoordinates.push_back({u, v});
    } else if (type == "vn") {
      float x, y, z;
      lineStream >> x >> y >> z;
      normals.push_back({x, y, z});
    } else if (type == "f") {
      int v1, v2, v3, t1 = 0, t2 = 0, t3 = 0, n1 = 0, n2 = 0, n3 = 0;
      char discard;
      lineStream >> v1 >> discard >> t1 >> discard >> n1
                 >> v2 >> discard >> t2 >> discard >> n2
                 >> v3 >> discard >> t3 >> discard >> n3;
      faces.push_back({v1 - 1, v2 - 1, v3 - 1, t1 - 1, t2 - 1, t3 - 1, n1 - 1, n2 - 1, n3 - 1});
    }
  }

  // Pass the data to OpenGL here
  return 0;
}
